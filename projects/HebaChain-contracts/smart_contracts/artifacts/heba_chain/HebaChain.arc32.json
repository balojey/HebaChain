{
    "hints": {
        "add_product(string,address,address,string,string,string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "ship_product(uint64,string,string,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "alter_product(uint64,string,string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "deliver_product(uint64,string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_products()(uint64,string,string,address,address,address,string,string,string,uint64)[]": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgpzbWFydF9jb250cmFjdHMuaGViYV9jaGFpbi5jb250cmFjdC5IZWJhQ2hhaW4uY2xlYXJfc3RhdGVfcHJvZ3JhbToKICAgIGludCAxCiAgICByZXR1cm4K"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 1
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "total_product": {
                    "type": "uint64",
                    "key": "total_product"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "HebaChain",
        "methods": [
            {
                "name": "add_product",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    },
                    {
                        "type": "address",
                        "name": "customer"
                    },
                    {
                        "type": "address",
                        "name": "intermediary"
                    },
                    {
                        "type": "string",
                        "name": "condition"
                    },
                    {
                        "type": "string",
                        "name": "current_location"
                    },
                    {
                        "type": "string",
                        "name": "delivery_location"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "ship_product",
                "args": [
                    {
                        "type": "uint64",
                        "name": "product_id"
                    },
                    {
                        "type": "string",
                        "name": "condition"
                    },
                    {
                        "type": "string",
                        "name": "location"
                    },
                    {
                        "type": "uint64",
                        "name": "delivery_date"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "alter_product",
                "args": [
                    {
                        "type": "uint64",
                        "name": "product_id"
                    },
                    {
                        "type": "string",
                        "name": "condition"
                    },
                    {
                        "type": "string",
                        "name": "location"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "deliver_product",
                "args": [
                    {
                        "type": "uint64",
                        "name": "product_id"
                    },
                    {
                        "type": "string",
                        "name": "condition"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "get_products",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "(uint64,string,string,address,address,address,string,string,string,uint64)[]"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}