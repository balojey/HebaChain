#pragma version 10

smart_contracts.heba_chain.contract.HebaChain.approval_program:
    callsub __puya_arc4_router__
    return


// smart_contracts.heba_chain.contract.HebaChain.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    proto 0 1
    txn NumAppArgs
    bz __puya_arc4_router___bare_routing@8
    method "add_product(string,string,string,address,address,string,string,string)(string,string,string,address,address,address,string,string,string,uint64)"
    method "ship_product(string,string,string,string,uint64)void"
    method "alter_product(string,string,string,string)void"
    method "deliver_product(string,string,string)void"
    txna ApplicationArgs 0
    match __puya_arc4_router___add_product_route@2 __puya_arc4_router___ship_product_route@3 __puya_arc4_router___alter_product_route@4 __puya_arc4_router___deliver_product_route@5
    int 0
    retsub

__puya_arc4_router___add_product_route@2:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    txna ApplicationArgs 3
    txna ApplicationArgs 4
    txna ApplicationArgs 5
    txna ApplicationArgs 6
    txna ApplicationArgs 7
    txna ApplicationArgs 8
    callsub add_product
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___ship_product_route@3:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    txna ApplicationArgs 3
    txna ApplicationArgs 4
    txna ApplicationArgs 5
    callsub ship_product
    int 1
    retsub

__puya_arc4_router___alter_product_route@4:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    txna ApplicationArgs 3
    txna ApplicationArgs 4
    callsub alter_product
    int 1
    retsub

__puya_arc4_router___deliver_product_route@5:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    txna ApplicationArgs 3
    callsub deliver_product
    int 1
    retsub

__puya_arc4_router___bare_routing@8:
    txn OnCompletion
    bnz __puya_arc4_router___after_if_else@12
    txn ApplicationID
    !
    assert // is creating
    int 1
    retsub

__puya_arc4_router___after_if_else@12:
    int 0
    retsub


// smart_contracts.heba_chain.contract.HebaChain.add_product(product_id: bytes, history_id: bytes, name: bytes, customer: bytes, intermediary: bytes, condition: bytes, current_location: bytes, delivery_location: bytes) -> bytes:
add_product:
    proto 8 1
    global LatestTimestamp
    itob
    frame_dig -7
    sha256
    frame_dig -8
    sha256
    dup
    byte 0x70726f647563745f
    swap
    concat
    dup
    box_len
    bury 1
    bnz add_product_after_if_else@2
    txn Sender
    frame_dig -8
    len
    int 116
    +
    dup
    itob
    extract 6 2
    byte 0x0074
    swap
    concat
    swap
    frame_dig -6
    len
    +
    dup
    itob
    extract 6 2
    uncover 2
    swap
    concat
    swap
    int 9
    +
    swap
    uncover 2
    concat
    frame_dig -4
    concat
    frame_dig -5
    concat
    dig 1
    itob
    extract 6 2
    concat
    swap
    frame_dig -3
    len
    +
    dup
    itob
    extract 6 2
    uncover 2
    swap
    concat
    swap
    frame_dig -2
    len
    +
    itob
    extract 6 2
    concat
    byte 0x0000000000000000
    concat
    frame_dig -8
    concat
    frame_dig -6
    concat
    byte 0x000743524541544544
    concat
    frame_dig -3
    concat
    frame_dig -2
    concat
    frame_dig -1
    concat
    frame_dig 2
    callsub save_product
    pop

add_product_after_if_else@2:
    byte 0x686973746f72795f
    frame_dig 1
    concat
    box_len
    bury 1
    bnz add_product_after_if_else@4
    frame_dig -7
    len
    int 16
    +
    dup
    itob
    extract 6 2
    byte 0x0010
    swap
    concat
    swap
    frame_dig -8
    len
    +
    dup
    itob
    extract 6 2
    uncover 2
    swap
    concat
    swap
    frame_dig -2
    len
    +
    itob
    extract 6 2
    concat
    frame_dig 0
    concat
    frame_dig -7
    concat
    frame_dig -8
    concat
    frame_dig -2
    concat
    frame_dig -3
    concat
    frame_dig 1
    callsub save_history
    popn 2

add_product_after_if_else@4:
    frame_dig -8
    frame_dig -6
    concat
    frame_dig -3
    concat
    frame_dig -1
    concat
    log
    frame_dig 3
    box_get
    assert // check self.products entry exists
    frame_bury 0
    retsub


// smart_contracts.heba_chain.contract.HebaChain.save_product(product: bytes, product_hash: bytes) -> bytes:
save_product:
    proto 2 1
    byte 0x70726f647563745f
    frame_dig -1
    concat
    dup
    box_del
    pop
    frame_dig -2
    box_put
    frame_dig -2
    retsub


// smart_contracts.heba_chain.contract.HebaChain.save_history(history: bytes, history_hash: bytes) -> bytes, bytes:
save_history:
    proto 2 2
    byte 0x686973746f72795f
    frame_dig -1
    concat
    dup
    box_del
    pop
    frame_dig -2
    box_put
    frame_dig -2
    dup
    retsub


// smart_contracts.heba_chain.contract.HebaChain.ship_product(product_id: bytes, history_id: bytes, condition: bytes, location: bytes, delivery_date: bytes) -> void:
ship_product:
    proto 5 0
    global LatestTimestamp
    itob
    frame_dig -4
    sha256
    swap
    frame_dig -5
    sha256
    frame_dig -5
    extract 2 0
    callsub get_product
    txn Sender
    swap
    dup
    extract 38 32 // on error: Index access is out of bounds
    uncover 2
    ==
    assert // Only the Intermediary can call this function
    dup
    int 4
    extract_uint16
    swap
    dup
    int 102
    extract_uint16
    dig 1
    uncover 3
    dig 2
    substring3
    byte 0x000743524541544544
    ==
    assert // Product is not in created state!
    dig 1
    int 0
    dig 2
    extract3
    swap
    dig 2
    int 104
    extract_uint16
    swap
    dig 3
    len
    swap
    uncover 4
    dig 3
    uncover 3
    substring3
    uncover 3
    frame_dig -3
    concat
    swap
    concat
    cover 2
    -
    swap
    frame_dig -3
    len
    dig 1
    int 104
    extract_uint16
    dig 1
    +
    dig 3
    -
    itob
    extract 6 2
    uncover 2
    swap
    replace2 104
    dup
    int 106
    extract_uint16
    uncover 2
    +
    uncover 2
    -
    itob
    extract 6 2
    replace2 106
    dup
    int 104
    extract_uint16
    dig 1
    int 0
    dig 2
    extract3
    swap
    dig 2
    int 106
    extract_uint16
    swap
    dig 3
    len
    swap
    uncover 4
    dig 3
    uncover 3
    substring3
    uncover 3
    frame_dig -2
    concat
    swap
    concat
    cover 2
    -
    swap
    frame_dig -2
    len
    dig 1
    int 106
    extract_uint16
    dig 1
    +
    uncover 3
    -
    itob
    extract 6 2
    uncover 2
    swap
    replace2 106
    frame_dig -1
    replace2 108
    dup
    int 4
    extract_uint16
    dig 1
    int 0
    dig 2
    extract3
    swap
    dig 2
    int 102
    extract_uint16
    swap
    dig 3
    len
    swap
    uncover 4
    dig 3
    uncover 3
    substring3
    uncover 3
    byte 0x000753484950504544
    concat
    swap
    concat
    cover 2
    -
    swap
    dup
    int 102
    extract_uint16
    int 9
    +
    dig 2
    -
    itob
    extract 6 2
    replace2 102
    dup
    int 104
    extract_uint16
    int 9
    +
    dig 2
    -
    itob
    extract 6 2
    replace2 104
    dup
    int 106
    extract_uint16
    int 9
    +
    uncover 2
    -
    itob
    extract 6 2
    replace2 106
    uncover 2
    callsub update_product
    frame_dig -4
    len
    int 16
    +
    dup
    itob
    extract 6 2
    byte 0x0010
    swap
    concat
    swap
    frame_dig -5
    len
    +
    dup
    itob
    extract 6 2
    uncover 2
    swap
    concat
    swap
    uncover 3
    +
    itob
    extract 6 2
    concat
    uncover 2
    concat
    frame_dig -4
    concat
    frame_dig -5
    concat
    frame_dig -2
    concat
    frame_dig -3
    concat
    uncover 2
    callsub save_history
    popn 2
    dup
    int 0
    extract_uint16
    swap
    dup
    int 2
    extract_uint16
    swap
    cover 2
    substring3
    frame_dig -3
    concat
    log
    retsub


// smart_contracts.heba_chain.contract.HebaChain.get_product(product_id: bytes) -> bytes:
get_product:
    proto 1 1
    frame_dig -1
    sha256
    byte 0x70726f647563745f
    swap
    concat
    box_get
    assert // check self.products entry exists
    retsub


// smart_contracts.heba_chain.contract.HebaChain.update_product(product: bytes, product_hash: bytes) -> bytes:
update_product:
    proto 2 1
    frame_dig -2
    frame_dig -1
    callsub save_product
    dup
    frame_bury -2
    retsub


// smart_contracts.heba_chain.contract.HebaChain.alter_product(product_id: bytes, history_id: bytes, condition: bytes, location: bytes) -> void:
alter_product:
    proto 4 0
    global LatestTimestamp
    itob
    frame_dig -3
    sha256
    swap
    frame_dig -4
    sha256
    frame_dig -4
    extract 2 0
    callsub get_product
    txn Sender
    swap
    dup
    extract 38 32 // on error: Index access is out of bounds
    uncover 2
    ==
    assert // Only the Intermediary can call this function
    dup
    int 4
    extract_uint16
    swap
    dup
    int 102
    extract_uint16
    dig 1
    uncover 3
    dig 2
    substring3
    byte 0x000753484950504544
    ==
    assert // Product is not in shipped state!
    dig 1
    int 0
    dig 2
    extract3
    swap
    dig 2
    int 104
    extract_uint16
    swap
    dig 3
    len
    swap
    uncover 4
    dig 3
    uncover 3
    substring3
    uncover 3
    frame_dig -2
    concat
    swap
    concat
    cover 2
    -
    swap
    frame_dig -2
    len
    dig 1
    int 104
    extract_uint16
    dig 1
    +
    dig 3
    -
    itob
    extract 6 2
    uncover 2
    swap
    replace2 104
    dup
    int 106
    extract_uint16
    uncover 2
    +
    uncover 2
    -
    itob
    extract 6 2
    replace2 106
    dup
    int 104
    extract_uint16
    dig 1
    int 0
    dig 2
    extract3
    swap
    dig 2
    int 106
    extract_uint16
    swap
    dig 3
    len
    swap
    uncover 4
    dig 3
    uncover 3
    substring3
    uncover 3
    frame_dig -1
    concat
    swap
    concat
    cover 2
    -
    swap
    frame_dig -1
    len
    dig 1
    int 106
    extract_uint16
    dig 1
    +
    uncover 3
    -
    itob
    extract 6 2
    uncover 2
    swap
    replace2 106
    uncover 2
    callsub update_product
    pop
    frame_dig -3
    len
    int 16
    +
    dup
    itob
    extract 6 2
    byte 0x0010
    swap
    concat
    swap
    frame_dig -4
    len
    +
    dup
    itob
    extract 6 2
    uncover 2
    swap
    concat
    swap
    uncover 2
    +
    itob
    extract 6 2
    concat
    swap
    concat
    frame_dig -3
    concat
    frame_dig -4
    concat
    frame_dig -1
    concat
    frame_dig -2
    concat
    swap
    callsub save_history
    popn 2
    frame_dig -4
    frame_dig -2
    concat
    frame_dig -1
    concat
    log
    retsub


// smart_contracts.heba_chain.contract.HebaChain.deliver_product(product_id: bytes, history_id: bytes, condition: bytes) -> void:
deliver_product:
    proto 3 0
    global LatestTimestamp
    itob
    frame_dig -2
    sha256
    swap
    frame_dig -3
    sha256
    frame_dig -3
    extract 2 0
    callsub get_product
    txn Sender
    swap
    dup
    extract 70 32 // on error: Index access is out of bounds
    uncover 2
    ==
    assert // Only the customer can call this function
    dup
    int 4
    extract_uint16
    swap
    dup
    int 102
    extract_uint16
    dig 1
    uncover 3
    uncover 2
    substring3
    byte 0x000753484950504544
    ==
    assert // Product is not in shipped state!
    dup
    int 106
    extract_uint16
    swap
    dup
    len
    swap
    dup
    dig 3
    uncover 3
    substring3
    swap
    dup
    int 104
    extract_uint16
    swap
    int 0
    dig 2
    extract3
    dig 2
    concat
    dig 2
    concat
    swap
    uncover 3
    swap
    -
    cover 2
    swap
    len
    dig 1
    int 106
    extract_uint16
    +
    uncover 2
    -
    itob
    extract 6 2
    replace2 106
    dup
    int 102
    extract_uint16
    dig 1
    int 0
    dig 2
    extract3
    swap
    dig 2
    int 104
    extract_uint16
    swap
    dig 3
    len
    swap
    uncover 4
    dig 3
    uncover 3
    substring3
    uncover 3
    frame_dig -1
    concat
    swap
    concat
    cover 2
    -
    swap
    frame_dig -1
    len
    dig 1
    int 104
    extract_uint16
    dig 1
    +
    dig 3
    -
    itob
    extract 6 2
    uncover 2
    swap
    replace2 104
    dup
    int 106
    extract_uint16
    uncover 2
    +
    uncover 2
    -
    itob
    extract 6 2
    replace2 106
    dup
    int 4
    extract_uint16
    dig 1
    int 0
    dig 2
    extract3
    swap
    dig 2
    int 102
    extract_uint16
    swap
    dig 3
    len
    swap
    uncover 4
    dig 3
    uncover 3
    substring3
    uncover 3
    byte 0x000944454c495645524544
    concat
    swap
    concat
    cover 2
    -
    swap
    dup
    int 102
    extract_uint16
    int 11
    +
    dig 2
    -
    itob
    extract 6 2
    replace2 102
    dup
    int 104
    extract_uint16
    int 11
    +
    dig 2
    -
    itob
    extract 6 2
    replace2 104
    dup
    int 106
    extract_uint16
    int 11
    +
    uncover 2
    -
    itob
    extract 6 2
    replace2 106
    swap
    callsub update_product
    dup
    int 104
    extract_uint16
    swap
    dup
    int 106
    extract_uint16
    dig 1
    uncover 3
    uncover 2
    substring3
    frame_dig -2
    len
    int 16
    +
    dup
    itob
    extract 6 2
    byte 0x0010
    swap
    concat
    swap
    frame_dig -3
    len
    +
    dup
    itob
    extract 6 2
    uncover 2
    swap
    concat
    swap
    dig 2
    len
    +
    itob
    extract 6 2
    concat
    uncover 3
    concat
    frame_dig -2
    concat
    frame_dig -3
    concat
    swap
    concat
    frame_dig -1
    concat
    uncover 2
    callsub save_history
    popn 2
    dup
    int 0
    extract_uint16
    swap
    dup
    int 2
    extract_uint16
    swap
    cover 2
    substring3
    frame_dig -1
    concat
    log
    retsub
